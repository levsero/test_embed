/**
 * 1. Since the parent container the scrollContainer which has header content, Chat header content and a footer
      the size of all of the aforementioned elements is equal to 220px. 100% - 220px allows us to position
      the Chat log in an appropriate location in Desktop mode.
 */
@import '../../styles/_vars.scss';

.scrollContainerMobile {
  .agentTyping {
    bottom: #{48/$font-size}rem;
  }
}

.container {
  height: #{$chat-height/$font-size}rem;
}

.mobileContainer {
  composes: u-textSizeMed from global;
  height: 100% !important;
}

.scrollContainer {
  composes: container;

  display: flex;
  flex-direction: column;
}

.scrollContainerContent {
  height: 100%;
  max-height: none;
  margin-right: #{7/$font-size}rem !important;
  margin-left: #{7/$font-size}rem !important;
  padding-right: #{8/$font-size}rem !important;
  padding-left: #{8/$font-size}rem !important;
}

.scrollBarFix {
  overflow-y: scroll !important;
  margin-right: 0 !important;
  padding-right: #{3$font-size}rem !important;
}

.scrollContainerMessagesContent {
  composes: scrollContainerContent;
  margin-top: #{58/$font-size}rem;
}

.scrollContainerMessagesContentDesktop {
  composes: scrollContainerMessagesContent;
  height: calc(100% - #{220/$font-size}rem); /* 1 */
}

.chatLogContainer {
  overflow: hidden;
}

.chatLogContainerMobile {
  min-height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
}

.header {
  composes: u-marginBM from global;
  position: relative;
}

.footer {
  box-shadow: 0 0 #{12/$font-size}rem #{8/$font-size}rem $zd-color-white;
  padding: #{8/$font-size}rem #{15/$font-size}rem !important;
}

.footerMobile {
  padding: 0 !important;
  border-top: $thin-border-size solid $zd-color-gainsboro;
  margin-top: #{12/$font-size}rem !important;
}

.chatEnd {
  composes: u-textCenter from global;
}

.chatEndPopupDescription {
  composes: u-paddingVL u-paddingLL u-paddingRL from global;
}

.agentTyping {
  composes: u-posAbsolute u-paddingTS from global;
  bottom: #{130/$font-size}rem;
  color: $zd-color-aluminum;
  width: #{301/$font-size}rem;
  background: linear-gradient(to bottom, rgba($zd-color-white, 0), rgba($zd-color-white, 0.8));
}

.loadingEllipses {
  composes: u-inlineBlock from global;
  padding-right: #{2/$font-size}rem;
  margin-right: #{5/$font-size}rem;
}

.loadingEllipsesItem {
  background-color: $zd-color-iron !important;
  width: #{4/$font-size}rem;
  height: #{4/$font-size}rem;
  margin-right: #{1/$font-size}rem;
  margin-bottom: #{2/$font-size}rem;
}

.queuePosition {
  composes: u-textCenter from global;
  margin-top: #{5/$font-size}rem;
  margin-bottom: #{10/$font-size}rem;
  color: $zd-color-aluminum;
}

.agentListBackButton {
  width: 100%;
  max-width: unset;
}

.reconnectContainer {
  composes: u-flex u-posFill u-posAbsolute u-flexAlignItemsCenter u-flexJustifyCenter from global;
}
