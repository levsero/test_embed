/**
 * 1. In the event where there are multiple layers rendered
 *    'backface-visibility: hidden' will only allow the front facing element to be visible
 */

@import '../../styles/_vars.scss';

.container {
  align-items: center;
  border: $thin-border-size solid $stroke-color;
  border-radius: #{4/$font-size}rem;
}

.desktopContainer {
  composes: container;
  padding-left: #{10/$font-size}rem;
  margin-bottom: $field-margin-bottom;
}

.mobileContainer {
  composes: container;
  padding-left: #{8/$font-size}rem;
  height: #{40/$font-size}rem;
  padding-top: #{0/$font-size}rem;
  padding-bottom: #{0/$font-size}rem;
  margin-top: #{30/$font-size}rem;
}

.mobileSearchInput {
  font-size: $font-size-mobile;
  height: #{43/$font-size}rem;

  [dir='rtl'] & {
    padding-left: 0 !important;
    padding-right: #{11/$font-size}rem !important;
  }
}

.mobileSearchIcon {
  max-height: 100%;
  padding: #{12/$font-size}rem;
  background-color: $zd-color-grey-200;
  margin: 0 auto!important;
}

.mobileClearInput {
  composes: u-isActionable u-textCenter u-marginRS from global;
  composes: Icon Icon--clearInput from '../../styles/components/Icon.scss';
}

.mobileNonSearchIconContainer {
  composes: Arrange-sizeFit u-isActionable from global;
  margin: 0;
  max-height: 100%;
  width: #{40/$font-size}rem;
}

.desktopSearchOrLoading {
  composes: u-userColor from global;
  margin: 0;
  max-height: 100%;

  &:hover {
    svg {
      path {
        fill: currentColor !important;
      }
    }
  };
}

.searchInput {
  &:focus {
    box-shadow: none !important;
  }
}
