/**
 * 1. This needs to be 3 so that it sits on top of the preview icons
 *    which have a zIndex of 2.
 */

@import '../../styles/_vars.scss';

$menu-height: #{200/$font-size}rem;

.container {
  composes: u-marginBM u-posRelative from global;
  color: $zd-color-monsoon;
}

.arrow {
  composes: u-pullRight u-posAbsolute from global;
  background: $zd-color-white;
  right: #{10/$font-size}rem;
  top: #{8/$font-size}rem;
  pointer-events: none;
  padding-top: #{4/$font-size}rem;
  padding-left: #{8/$font-size}rem;
  padding-bottom: #{7/$font-size}rem;

  [dir="rtl"] & {
    left: #{10/$font-size}rem;
    right: initial;
    padding-right: #{8/$font-size}rem;
  }

  svg {
    pointer-events: none;
    fill: $zd-color-silver-sand;
    color: $zd-color-silver-sand;
    transition: all 0.2s ease;
  }
}

.arrowOpen {
  svg {
    transform: rotate(180deg);
  }
}

.arrowHover {
  svg {
    fill: $zd-color-dark-gray !important;
    color: $zd-color-dark-gray !important;
  }
}

.label {
  composes: Form-fieldLabel from '../../styles/components/Form.scss';
  composes: u-textXHeight from global;
}

.input {
  composes: Form-field from '../../styles/components/Form.scss';
  color: $zd-color-oil !important;
  outline: none;
  padding-bottom: #{8/$font-size}rem !important;
  padding-top: #{8/$font-size}rem !important;
  height: #{18/$font-size}rem;

  &:focus {
    border: $thin-border-size solid $stroke-focused-color;
    box-shadow: 0 0 0 #{3/$font-size}rem rgba(153,153,153, 0.4);
  }
}

.inputError {
  composes: Form-field--invalid from '../../styles/components/Form.scss';
}

.labelMobile {
  composes: u-textSize15 from global;
}

.labelLandscape {
  composes: u-textSizeSml from global;
}

.menuContainer {
  composes: u-posAbsolute u-border u-hsizeAll u-posStart--flush from global;
  z-index: 3; /* 1 */
  border-radius: #{4/$font-size}rem;
  border-color: $zd-color-aluminum;
  top: #{39/$font-size}rem;
  left: #{-1/$font-size}rem;
  height: $menu-height;
  overflow-x: hidden;
  overflow-y: scroll;
  background-color: $zd-color-white;
  padding-top: #{3/$font-size}rem;
  padding-bottom: #{3/$font-size}rem;
  box-shadow: 0 0 #{6/$font-size}rem 0 rgba($base-shadow, .2);

  /*
   * Customise scrollbar for safari/chrome
   */
  &::-webkit-scrollbar-track {
    margin: #{5/$font-size}rem;
    padding-right: #{5/$font-size}rem;
  }
  &::-webkit-scrollbar {
    box-shadow: none;
    width: #{3/$font-size}rem;
  }
  &::-webkit-scrollbar-thumb {
    background: $base-border-color;
    border-radius: #{3/$font-size}rem;
  }

  [dir="rtl"] & {
    right: #{-1/$font-size}rem;
    left: initial;
  }
}

.menuUp {
  top: calc(-#{$menu-height} - #{9/$font-size}rem);
}

.menuContainerMobile {
  composes: u-textSize15 from global;
  top: #{43/$font-size}rem;
}

.menu {
  composes: u-hsizeAll from global;
}

.description {
  composes: Form-description from '../../styles/components/Form.scss';
  composes: u-textAluminum from global;
}

@keyframes right {
  from {
    left: #{300/$font-size}rem;
  }
  to {
    left: 0;
  }
}

@keyframes left {
  from {
    right: #{300/$font-size}rem;
  }
  to {
    right: 0;
  }
}

.animateRight {
  composes: u-posAbsolute from global;

  animation: right 0.2s linear 0s 1;
}

.animateLeft {
  composes: u-posAbsolute from global;

  animation: left 0.2s linear 0s 1;
}
